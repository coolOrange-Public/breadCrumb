<?xml version="1.0" encoding="utf-8"?>
<prop:DSWindow 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:prop="clr-namespace:dataStandard.UI.View;assembly=dataStandard.UI"  
	x:Name="InventorWindow" WindowStyle="ToolWindow" ShowInTaskbar="False" 
	Topmost="True" MinWidth="600" MinHeight="500" MaxHeight="500" Background="#F0F0F0">
    <prop:DSWindow.Resources>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsReadOnly}" Value="True">
                    <Setter Property="Background" Value="#F0F0F0"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FileNameStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CreateMode}" Value="True"></Condition>
                        <Condition Binding="{Binding ElementName=NumSchms, Path=IsEnabled}" Value="True"></Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Text" Value="{Binding UIString[LBL59]}"></Setter>
                    <Setter Property="IsReadOnly" Value="True"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CreateMode}" Value="True"></Condition>
                        <Condition Binding="{Binding ElementName=NumSchms, Path=IsEnabled}" Value="False"></Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Text" Value="{Binding Prop[DocNumber].Value}"></Setter>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Background" Value="#F0F0F0" />
                    <Setter Property="IsReadOnly" Value="True"></Setter>
                    <Setter Property="Text" Value="{Binding Prop[_FileName].Value}"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FolderStyle" TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="ItemsSource" Value="{Binding PsList[GetFolderList]}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CreateMode}" Value="False">
					<Setter Property="IsEnabled" Value="False"></Setter>
                    <Setter Property="Text" Value="{Binding Prop[Folder].Value}"></Setter>
                    <Setter Property="IsEditable" Value="True"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NumSchmStyle" TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="ItemsSource" Value="{Binding PsList[GetNumSchms]}"></Setter>
                    <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Text" Value="{Binding UIString[LBL27]}"></Setter>
                    <Setter Property="Background" Value="#F0F0F0" />
                    <Setter Property="IsEditable" Value="True"></Setter>
                    <Setter Property="IsReadOnly" Value="True"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Label}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="{x:Null}">
                    <Setter Property="BorderThickness" Value="1"></Setter>
                    <Setter Property="BorderBrush" Value="#ff0000"></Setter>
            </DataTrigger>
            </Style.Triggers>
        </Style>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </prop:DSWindow.Resources>
    <Window.Style>
        <Style TargetType="{x:Type prop:DSWindow}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="Title" Value="{Binding UIString[LBL24]}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding CreateMode}" Value="False">
					<Setter Property="Title">
						<Setter.Value>
							<MultiBinding StringFormat="{}{0} - '{1}'" >
								<Binding Path="UIString[LBL25]" />
								<Binding Path="PathAndFileNameHandler.FileName" />
							</MultiBinding>	
						</Setter.Value>
					</Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="8" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="24" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="140" />
            <ColumnDefinition Width="*" MinWidth="380" />
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0" Content="{Binding UIString[LBL10]}"></Label>
        <ComboBox Grid.Column="1" Grid.Row="0" Name="NumSchms" SelectedIndex="0" Style="{StaticResource NumSchmStyle}"></ComboBox>
        <Label Grid.Row="2" Grid.Column="0" Content="{Binding UIString[LBL31]}"></Label>
        <prop:DSNumSchemeCtrl Grid.Row="2" Grid.Column="1" Scheme="{Binding ElementName=NumSchms, Path=SelectedItem}" IsEnabled="{Binding ElementName=NumSchms, Path=IsEnabled}"  GeneratedNumberProperty="DocNumber" ></prop:DSNumSchemeCtrl>
        <Label Content="{Binding UIString[LBL1]}" Grid.Row="4" Grid.Column="0" />
        <StackPanel Grid.Column="1" Grid.Row="4" Name="BreadCrumb" Orientation="Horizontal"/>
		<!--ComboBox Grid.Column="1" Grid.Row="4" SelectedValue="{Binding Prop[Folder].Value}" SelectedIndex="0" Style="{StaticResource FolderStyle}" /-->
        <Label Content="*" Grid.Column="0" Grid.Row="4" Foreground="#FF0000" HorizontalAlignment="Right" FontWeight="Bold" Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Label Content="{Binding UIString[LBL2]}" Grid.Column="0" Grid.Row="6" />
        <TextBox Text="{Binding Prop[Title].Value, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="6" />
        <Label Content="*" Grid.Column="0" Grid.Row="6" Foreground="#FF0000" HorizontalAlignment="Right" FontWeight="Bold" />
        <Label Content="{Binding UIString[LBL3]}" Grid.Column="0" Grid.Row="8" />
        <TextBox Text="{Binding Prop[Description].Value}" Grid.Column="1" Grid.Row="8" Name="Description" VerticalScrollBarVisibility="Auto" MinHeight="50" MaxHeight="50" TextWrapping="Wrap" AcceptsReturn="True"/>
        <Label Content="{Binding UIString[LBL4]}" Grid.Column="0" Grid.Row="10" />
        <TextBox Text="" Grid.Column="1" Grid.Row="10" IsReadOnly="True" Background="#F0F0F0"/>
        <Label Content="{Binding UIString[LBL5]}" Grid.Column="0" Grid.Row="12" />
        <TextBox Text="{Binding PathAndFileNameHandler.Path}" Grid.Column="1" Grid.Row="12" IsReadOnly="True" Background="#F0F0F0" />

        <Label Content="{Binding UIString[LBL6]}" Grid.Row="14" Grid.Column="0" />
        <TextBox Grid.Row="14" Grid.Column="1" Name="FILENAME" Style="{StaticResource FileNameStyle}"></TextBox>
        <Label Content="*" Grid.Column="0" Grid.Row="14" Foreground="#FF0000" HorizontalAlignment="Right" FontWeight="Bold" Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Label Content="{Binding UIString[LBL7]}" Grid.Row="16" />
        <TextBox Grid.Row="16" Text="{Binding Prop[Comments].Value}" VerticalAlignment="Center" Grid.Column="1" VerticalScrollBarVisibility="Auto" MinHeight="50" MaxHeight="50" TextWrapping="Wrap" AcceptsReturn="True" />
        <Grid Grid.Row="18" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>
            <Button Command="{Binding CloseWindowCommand, ElementName=InventorWindow}"
			        IsEnabled="{Binding Properties.IsValid}"
					Grid.Column="1"
					Margin="0,5,0,5"
					Width="80"
					HorizontalAlignment="Right"
					VerticalAlignment="Center"
					ToolTipService.ShowOnDisabled="True"
					ToolTip="{Binding UIString[LBL35]}"
                    Content="{Binding UIString[BTN1]}"></Button>
            <Button Grid.Column="3" Width="80" HorizontalAlignment="Right" Margin="0,5,0,5" VerticalAlignment="Center" Command="{Binding CancelWindowCommand, ElementName=InventorWindow}" Content="{Binding UIString[BTN2]}"></Button>
        </Grid>
    </Grid>
</prop:DSWindow>